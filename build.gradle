plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.0'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'jacoco'
}

group = 'org.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

jacoco {
    toolVersion = "0.8.12"
    reportsDirectory = layout.buildDirectory.dir('customJacocoReportDir')
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    annotationProcessor 'org.projectlombok:lombok'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation group: 'org.springframework.data', name: 'spring-data-redis', version: '3.4.1'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-jdbc', version: '3.4.1'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-validation', version: '3.4.1'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-aop', version: '3.4.1'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation group: 'mysql', name: 'mysql-connector-java', version: '8.0.33'
    compileOnly group: 'software.amazon.awssdk', name: 's3', version: '2.29.40'
    implementation group: 'software.amazon.awssdk', name: 'aws-core', version: '2.29.40'
    compileOnly 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

test {
    useJUnitPlatform()
    jacoco {
        enabled = true
        destinationFile = layout.buildDirectory.file("jacoco/${name}.exec").get().asFile
        includes = []
        excludes = []
        excludeClassLoaders = []
        includeNoLocationClasses = false
        sessionId = "<auto-generated value>"
        dumpOnExit = true
        classDumpDir = null
        output = JacocoTaskExtension.Output.FILE
        address = "localhost"
        port = 6300
        jmx = false
    }
    finalizedBy jacocoTestReport // report is always generated after tests run
}
jacocoTestReport {
    dependsOn test // tests are required to run before generating the report
    reports {
        xml.required = false
        csv.required = false
        html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
    }
}
